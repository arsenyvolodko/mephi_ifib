openapi: 3.0.1
info:
  title: Mephi-IFIB API
  version: '1.0'
servers:
  - url: http://localhost:8000
    description: Local server
paths:
  /api/v1/auth/register:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        '200':
          description: successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterAuthResponse'
  /api/v1/auth/register/confirm:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationConfirmRequest'
        required: true
      responses:
        '200':
          description: successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /api/v1/auth/update-confirmation-code:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfirmationCodeRequest'
        required: true
      responses:
        '200':
          description: successful request
  /api/v1/auth/login:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /api/v1/home/media/main-video:
    get:
      tags:
        - home
      responses:
        '200':
          description: successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoLink'
  /api/v1/home/team-members:
    get:
      tags:
        - home
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
  /api/v1/home/feedback-form:
    post:
      tags:
        - home
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedObject'
  /api/v1/article:
    get:
      tags:
        - article
      parameters:
        - name: searchName
          in: query
          description: Автор или название статьи
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            default: 10
            type: integer
        - name: pageNumber
          in: query
          schema:
            default: 1
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetArticlesResponse'
  /api/v1/article/{articleId}:
    get:
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
      tags:
        - article
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegistrationRequest:
      type: object
      required:
        - lastName
        - firstName
        - middleName
        - birthDate
        - email
        - socialNetwork
        - educationalStatus
        - sphereOfInterest
        - password
        - passwordConfirmation
      properties:
        lastName:
          type: string
        firstName:
          type: string
        middleName:
          nullable: true
          type: string
        birthDate:
          type: string
          format: date
          example: 05.03.2003
        email:
          type: string
        socialNetwork:
          type: string
          example: https://t.me/arseny_volodko
        educationalStatus:
          type: string
          nullable: true
          enum:
            - school_student
            - university_student
        educationalFacility:
          type: string
        sphereOfInterest:
          type: string
          enum:
            - it
            - science
        password:
          type: string
        passwordConfirmation:
          type: string

    RegistrationConfirmRequest:
      type: object
      required:
        - confirmationCode
        - registerToken
      properties:
        confirmationCode:
          type: string
        registerToken:
          type: string

    UpdateConfirmationCodeRequest:
      type: object
      required:
        - registerToken
      properties:
        registerToken:
          type: string

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    FeedbackRequest:
      type: object
      required:
        - name
        - phoneNumber
        - email
        - text
        - allowPersonalDataProcessing
      properties:
        name:
          type: string
        phoneNumber:
          type: string
          example: 9101459029
        email:
          type: string
        text:
          type: string
        allowPersonalDataProcessing:
          type: boolean

    VideoLink:
      type: object
      properties:
        url:
          type: string

    TeamMember:
      type: object
      properties:
        name:
          type: string
        imageUrl:
          type: string
        description:
          type: string

    BriefArticle:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        author:
          type: string
        coverUrl:
          type: string
          example: /media/article/covers/1.jpg

    Article:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        author:
          type: string
        coverUrl:
          type: string
          example: /media/article/covers/1.jpg
        documentUrl:
          type: string
          example: /media/article/documents/1.pdf

    RegisterAuthResponse:
      type: object
      properties:
        registerToken:
          type: string

    GetArticlesResponse:
      type: object
      properties:
        totalItems:
          type: integer
        pageSize:
          type: integer
        totalPages:
          type: integer
        pageNumber:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/BriefArticle"

    TokenResponse:
      type: object
      properties:
        token:
          type: string

    CreatedObject:
      properties:
        id:
          type: integer

    Error:
      properties:
        type:
          type: integer
        message:
          type: string